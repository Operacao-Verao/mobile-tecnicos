generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Afetados {
  id          Int        @id @default(autoincrement())
  idRelatorio Int?
  adultos     Int?
  Criancas    Int?
  idosos      Int?
  especiais   Int?
  mortos      Int?
  feridos     Int?
  enfermos    Int?
  Relatorio   Relatorio? @relation(fields: [idRelatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Afetados_ibfk_1")

  @@index([idRelatorio], map: "idRelatorio")
}

model Alerta_Chuva {
  id          Int          @id @default(autoincrement())
  idPluv      Int?
  statusChuva String       @db.VarChar(50)
  dataChuva   DateTime     @db.DateTime(0)
  Pluviometro Pluviometro? @relation(fields: [idPluv], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Alerta_Chuva_ibfk_1")

  @@index([idPluv], map: "idPluv")
}

model Alerta_Rio {
  id            Int          @id @default(autoincrement())
  idFluv        Int?
  statusRio     String?      @db.VarChar(50)
  dataAlertaRio DateTime     @db.DateTime(0)
  Fluviometro   Fluviometro? @relation(fields: [idFluv], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Alerta_Rio_ibfk_1")

  @@index([idFluv], map: "idFluv")
}

model Animal {
  id          Int        @id @default(autoincrement())
  idRelatorio Int?
  caes        Int?
  gatos       Int?
  aves        Int?
  esquinos    Int?
  Relatorio   Relatorio? @relation(fields: [idRelatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Animal_ibfk_1")

  @@index([idRelatorio], map: "idRelatorio")
}

model Cargo {
  id         Int          @id @default(autoincrement())
  nomeCargo  String       @db.VarChar(100)
  Memo       Memo[]
  Secretario Secretario[]
}

model Casa {
  id          Int         @id @default(autoincrement())
  cep         String      @db.Char(8)
  numero      String?     @db.VarChar(10)
  complemento String?     @db.VarChar(50)
  Relatorio   Relatorio[]
}

model Civil {
  id         Int          @id @default(autoincrement())
  idEndereco Int?
  nome       String       @db.VarChar(100)
  email      String?      @unique(map: "email") @db.VarChar(70)
  senha      String       @db.VarChar(70)
  cpf        String       @unique(map: "cpf") @db.Char(11)
  celular    String       @db.Char(11)
  telefone   String?      @db.Char(10)
  Endereco   Endereco?    @relation(fields: [idEndereco], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Civil_ibfk_1")
  Ocorrencia Ocorrencia[]

  @@index([idEndereco], map: "idEndereco")
}

model DadosDaVistoria {
  id                 Int        @id @default(autoincrement())
  idRelatorio        Int?
  desmoronamento     Boolean?
  deslizamento       Boolean?
  esgoto_escoamento  Boolean?
  erosao             Boolean?
  inundacao          Boolean?
  incendio           Boolean?
  arvores            Boolean?
  infiltracao_trinca Boolean?
  judicial           Boolean?
  monitoramento      Boolean?
  transito           Boolean?
  outros             String?    @db.VarChar(355)
  Relatorio          Relatorio? @relation(fields: [idRelatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "DadosDaVistoria_ibfk_1")

  @@index([idRelatorio], map: "idRelatorio")
}

model Endereco {
  id          Int           @id @default(autoincrement())
  cep         String        @db.Char(8)
  rua         String        @db.VarChar(155)
  bairro      String        @db.VarChar(100)
  cidade      String?       @db.VarChar(70)
  Civil       Civil[]
  Foto        Foto[]
  Local_Ajuda Local_Ajuda[]
}

model Fluviometro {
  id           Int            @id @default(autoincrement())
  cep          String?        @db.Char(8)
  lat          Decimal?       @db.Decimal(6, 2)
  longitude    Decimal?       @db.Decimal(6, 2)
  Alerta_Rio   Alerta_Rio[]
  Nivel_Diario Nivel_Diario[]
}

model Foto {
  id          Int        @id @default(autoincrement())
  idRelatorio Int?
  idEndereco  Int?
  Relatorio   Relatorio? @relation(fields: [idRelatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Foto_ibfk_1")
  Endereco    Endereco?  @relation(fields: [idEndereco], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Foto_ibfk_2")

  @@index([idEndereco], map: "idEndereco")
  @@index([idRelatorio], map: "idRelatorio")
}

model Funcionario {
  id          Int      @id @default(autoincrement())
  nome        String   @db.VarChar(100)
  email       String?  @unique @db.VarChar(100)
  senha       String?  @db.VarChar(70)
  tipoUsuario String?  @db.VarChar(100)
  Gestor      Gestor?
  Tecnico     Tecnico?
}

model Gestor {
  id            Int          @id @default(autoincrement())
  idFuncionario Int?         @unique(map: "idFuncionario")
  Funcionario   Funcionario? @relation(fields: [idFuncionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Gestor_ibfk_1")
}

model Local_Ajuda {
  id          Int       @id @default(autoincrement())
  idEndereco  Int?
  tipo        String?   @db.VarChar(100)
  conteudo    String?   @db.VarChar(355)
  cepEndereco String?   @db.Char(8)
  Endereco    Endereco? @relation(fields: [idEndereco], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Local_Ajuda_ibfk_1")

  @@index([idEndereco], map: "idEndereco")
}

model Memo {
  id           Int         @id @default(autoincrement())
  idRelatorio  Int?
  idSecretaria Int?
  idCargo      Int?
  dataMemo     DateTime    @db.Date
  statusMemo   String      @db.VarChar(355)
  processo     String?     @db.Char(10)
  Relatorio    Relatorio?  @relation(fields: [idRelatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Memo_ibfk_1")
  Secretaria   Secretaria? @relation(fields: [idSecretaria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Memo_ibfk_2")
  Cargo        Cargo?      @relation(fields: [idCargo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Memo_ibfk_3")

  @@index([idCargo], map: "idCargo")
  @@index([idRelatorio], map: "idRelatorio")
  @@index([idSecretaria], map: "idSecretaria")
}

model Nivel_Chuva {
  id          Int          @id @default(autoincrement())
  idPluv      Int?
  chuva_em_mm Decimal?     @db.Decimal(3, 2)
  dataChuva   DateTime?    @db.Date
  Pluviometro Pluviometro? @relation(fields: [idPluv], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Nivel_Chuva_ibfk_1")

  @@index([idPluv], map: "idPluv")
}

model Nivel_Diario {
  id          Int          @id @default(autoincrement())
  idFluv      Int?
  nivel_rio   Decimal?     @db.Decimal(3, 2)
  data_Diario DateTime?    @db.Date
  Fluviometro Fluviometro? @relation(fields: [idFluv], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Nivel_Diario_ibfk_1")

  @@index([idFluv], map: "idFluv")
}

model Ocorrencia {
  id             Int         @id @default(autoincrement())
  idTecnico      Int?
  idCivil        Int?
  acionamento    String      @db.VarChar(100)
  relato_Civil   String      @db.VarChar(355)
  num_Casas      Int
  aprovado       Boolean
  dataOcorrencia DateTime    @db.Date
  Tecnico        Tecnico?    @relation(fields: [idTecnico], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Ocorrencia_ibfk_1")
  Civil          Civil?      @relation(fields: [idCivil], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Ocorrencia_ibfk_2")
  Relatorio      Relatorio[]

  @@index([idCivil], map: "idCivil")
  @@index([idTecnico], map: "idTecnico")
}

model Pluviometro {
  id           Int            @id @default(autoincrement())
  cep          String         @db.Char(8)
  lat          Decimal        @db.Decimal(6, 2)
  longPluvi    Decimal?       @db.Decimal(6, 2)
  Alerta_Chuva Alerta_Chuva[]
  Nivel_Chuva  Nivel_Chuva[]
}

model Relatorio {
  id              Int               @id @default(autoincrement())
  idOcorrencia    Int?
  idCasa          Int?
  enfermos        Int
  gravidade       String            @db.VarChar(9)
  relatorio       String            @db.VarChar(355)
  encaminhamento  String            @db.VarChar(155)
  memorando       String            @db.VarChar(100)
  oficio          String            @db.VarChar(100)
  processo        String            @db.VarChar(100)
  assunto         String            @db.VarChar(200)
  observacoes     String            @db.VarChar(355)
  areaAfetada     String            @db.VarChar(10)
  tipoConstrucao  String            @db.VarChar(9)
  tipoTalude      String            @db.VarChar(8)
  vegetacao       String            @db.VarChar(20)
  danos_materiais Boolean
  dataGeracao     DateTime          @db.Date
  dataAtendimento DateTime          @db.Date
  Afetados        Afetados[]
  Animal          Animal[]
  DadosDaVistoria DadosDaVistoria[]
  Foto            Foto[]
  Memo            Memo[]
  Ocorrencia      Ocorrencia?       @relation(fields: [idOcorrencia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Relatorio_ibfk_1")
  Casa            Casa?             @relation(fields: [idCasa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Relatorio_ibfk_2")

  @@index([idCasa], map: "idCasa")
  @@index([idOcorrencia], map: "idOcorrencia")
}

model Secretaria {
  id             Int          @id @default(autoincrement())
  nomeSecretaria String       @db.VarChar(100)
  Memo           Memo[]
  Secretario     Secretario[]
}

model Secretario {
  id             Int         @id @default(autoincrement())
  idSecretaria   Int?
  idCargo        Int?
  nomeSecretario String      @db.VarChar(100)
  Secretaria     Secretaria? @relation(fields: [idSecretaria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Secretario_ibfk_1")
  Cargo          Cargo?      @relation(fields: [idCargo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Secretario_ibfk_2")

  @@index([idCargo], map: "idCargo")
  @@index([idSecretaria], map: "idSecretaria")
}

model Tecnico {
  id            Int          @id @default(autoincrement())
  idFuncionario Int?         @unique(map: "idFuncionario")
  Ocorrencia    Ocorrencia[]
  Funcionario   Funcionario? @relation(fields: [idFuncionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Tecnico_ibfk_1")
}

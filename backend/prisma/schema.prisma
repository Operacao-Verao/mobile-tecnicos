generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Afetados {
  id           Int       @id @default(autoincrement())
  id_relatorio Int       @unique(map: "id_relatorio")
  adultos      Int?
  criancas     Int?
  idosos       Int?
  especiais    Int?
  mortos       Int?
  feridos      Int?
  enfermos     Int?
  Relatorio    Relatorio @relation(fields: [id_relatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Afetados_ibfk_1")
}

model AlertaChuva {
  id             Int          @id @default(autoincrement())
  id_pluviometro Int?
  status_chuva   String       @db.VarChar(50)
  data_chuva     DateTime     @db.DateTime(0)
  Pluviometro    Pluviometro? @relation(fields: [id_pluviometro], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "AlertaChuva_ibfk_1")

  @@index([id_pluviometro], map: "id_pluviometro")
}

model AlertaRio {
  id              Int          @id @default(autoincrement())
  id_fluviometro  Int?
  status_rio      String?      @db.VarChar(50)
  data_alerta_rio DateTime     @db.DateTime(0)
  Fluviometro     Fluviometro? @relation(fields: [id_fluviometro], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "AlertaRio_ibfk_1")

  @@index([id_fluviometro], map: "id_fluviometro")
}

model Animal {
  id           Int       @id @default(autoincrement())
  id_relatorio Int       @unique(map: "id_relatorio")
  caes         Int?
  gatos        Int?
  aves         Int?
  equinos      Int?
  Relatorio    Relatorio @relation(fields: [id_relatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Animal_ibfk_1")
}

model Cargo {
  id         Int          @id @default(autoincrement())
  nome_cargo String       @db.VarChar(100)
  Secretario Secretario[]
}

model Casa {
  id          Int         @id @default(autoincrement())
  cep         String      @db.Char(8)
  numero      String?     @db.VarChar(10)
  complemento String?     @db.VarChar(50)
  Endereco    Endereco    @relation(fields: [cep], references: [cep], onDelete: NoAction, onUpdate: NoAction, map: "Casa_ibfk_1")
  Civil       Civil[]
  Relatorio   Relatorio[]

  @@index([cep], map: "cep")
}

model Civil {
  id         Int          @id @default(autoincrement())
  cep        String       @db.Char(8)
  id_casa    Int
  nome       String       @db.VarChar(100)
  email      String?      @unique(map: "email") @db.VarChar(70)
  senha      String       @db.VarChar(70)
  cpf        String       @unique(map: "cpf") @db.Char(11)
  celular    String       @db.Char(11)
  telefone   String?      @db.Char(10)
  Casa       Casa         @relation(fields: [id_casa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Civil_ibfk_1")
  Endereco   Endereco     @relation(fields: [cep], references: [cep], onDelete: NoAction, onUpdate: NoAction, map: "Civil_ibfk_2")
  Ocorrencia Ocorrencia[]

  @@index([cep], map: "cep")
  @@index([id_casa], map: "id_casa")
}

model Comunicado {
  id        Int    @id @default(autoincrement())
  id_gestor Int
  conteudo  String @db.VarChar(355)
  Gestor    Gestor @relation(fields: [id_gestor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Comunicado_ibfk_1")

  @@index([id_gestor], map: "id_gestor")
}

model DadosDaVistoria {
  id                 Int       @id @default(autoincrement())
  id_relatorio       Int       @unique(map: "id_relatorio")
  desmoronamento     Boolean?
  deslizamento       Boolean?
  esgoto_escoamento  Boolean?
  erosao             Boolean?
  inundacao          Boolean?
  incendio           Boolean?
  arvores            Boolean?
  infiltracao_trinca Boolean?
  judicial           Boolean?
  monitoramento      Boolean?
  transito           Boolean?
  outros             String?   @db.VarChar(355)
  Relatorio          Relatorio @relation(fields: [id_relatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "DadosDaVistoria_ibfk_1")
}

model Endereco {
  cep         String        @id @db.Char(8)
  rua         String        @db.VarChar(155)
  bairro      String        @db.VarChar(100)
  cidade      String?       @db.VarChar(70)
  Casa        Casa[]
  Civil       Civil[]
  Fluviometro Fluviometro[]
  LocalAjuda  LocalAjuda[]
  Pluviometro Pluviometro[]
}

model Fluviometro {
  id        Int         @id @default(autoincrement())
  cep       String?     @db.Char(8)
  latitude  Decimal?    @db.Decimal(8, 3)
  longitude Decimal?    @db.Decimal(8, 3)
  AlertaRio AlertaRio[]
  Endereco  Endereco?   @relation(fields: [cep], references: [cep], onDelete: NoAction, onUpdate: NoAction, map: "Fluviometro_ibfk_1")
  NivelRio  NivelRio[]

  @@index([cep], map: "cep")
}

model Foto {
  id           Int       @id @default(autoincrement())
  id_relatorio Int
  codificado   String    @db.LongText
  Relatorio    Relatorio @relation(fields: [id_relatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Foto_ibfk_1")

  @@index([id_relatorio], map: "id_relatorio")
}

model Funcionario {
  id           Int        @id @default(autoincrement())
  nome         String     @db.VarChar(100)
  email        String?    @unique @db.VarChar(100)
  senha        String     @db.VarChar(70)
  tipo_usuario Int
  Gestor       Gestor?
  Registro     Registro[]
  Tecnico      Tecnico?
}

model Gestor {
  id             Int          @id @default(autoincrement())
  id_funcionario Int          @unique(map: "id_funcionario")
  Comunicado     Comunicado[]
  Funcionario    Funcionario  @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Gestor_ibfk_1")
}

model LocalAjuda {
  id       Int      @id @default(autoincrement())
  cep      String   @db.Char(8)
  tipo     String?  @db.VarChar(100)
  conteudo String?  @db.VarChar(355)
  Endereco Endereco @relation(fields: [cep], references: [cep], onDelete: NoAction, onUpdate: NoAction, map: "LocalAjuda_ibfk_1")

  @@index([cep], map: "cep")
}

model Memo {
  id            Int        @id @default(autoincrement())
  id_relatorio  Int        @unique(map: "id_relatorio")
  id_secretaria Int
  data_memo     DateTime   @db.Date
  status_memo   String     @db.VarChar(355)
  processo      String?    @db.Char(10)
  Relatorio     Relatorio  @relation(fields: [id_relatorio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Memo_ibfk_1")
  Secretaria    Secretaria @relation(fields: [id_secretaria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Memo_ibfk_2")

  @@index([id_secretaria], map: "id_secretaria")
}

model NivelChuva {
  id             Int          @id @default(autoincrement())
  id_pluviometro Int?
  chuva_em_mm    Decimal?     @db.Decimal(5, 2)
  data_chuva     DateTime?    @db.DateTime(0)
  Pluviometro    Pluviometro? @relation(fields: [id_pluviometro], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "NivelChuva_ibfk_1")

  @@index([id_pluviometro], map: "id_pluviometro")
}

model NivelRio {
  id             Int          @id @default(autoincrement())
  id_fluviometro Int?
  nivel_rio      Decimal?     @db.Decimal(5, 2)
  data_diario    DateTime?    @db.DateTime(0)
  Fluviometro    Fluviometro? @relation(fields: [id_fluviometro], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "NivelRio_ibfk_1")

  @@index([id_fluviometro], map: "id_fluviometro")
}

model Ocorrencia {
  id              Int         @id @default(autoincrement())
  id_tecnico      Int
  id_civil        Int
  acionamento     String      @db.VarChar(100)
  relato_civil    String      @db.VarChar(355)
  num_casas       Int
  aprovado        Boolean
  data_ocorrencia DateTime    @db.Date
  Tecnico         Tecnico     @relation(fields: [id_tecnico], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Ocorrencia_ibfk_1")
  Civil           Civil       @relation(fields: [id_civil], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Ocorrencia_ibfk_2")
  Relatorio       Relatorio[]

  @@index([id_civil], map: "id_civil")
  @@index([id_tecnico], map: "id_tecnico")
}

model Pluviometro {
  id          Int           @id @default(autoincrement())
  cep         String        @db.Char(8)
  latitude    Decimal       @db.Decimal(8, 3)
  longitude   Decimal?      @db.Decimal(8, 3)
  AlertaChuva AlertaChuva[]
  NivelChuva  NivelChuva[]
  Endereco    Endereco      @relation(fields: [cep], references: [cep], onDelete: NoAction, onUpdate: NoAction, map: "Pluviometro_ibfk_1")

  @@index([cep], map: "cep")
}

model Registro {
  id             Int         @id @default(autoincrement())
  id_funcionario Int
  acao           Int
  descricao      String      @db.VarChar(127)
  momento        DateTime    @db.DateTime(0)
  Funcionario    Funcionario @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Registro_ibfk_1")

  @@index([id_funcionario], map: "id_funcionario")
}

model Relatorio {
  id               Int              @id @default(autoincrement())
  id_ocorrencia    Int
  id_casa          Int?
  gravidade        Int
  relatorio        String           @db.VarChar(355)
  encaminhamento   String           @db.VarChar(155)
  memorando        String           @db.VarChar(100)
  oficio           String           @db.VarChar(100)
  processo         String           @db.VarChar(100)
  assunto          String           @db.VarChar(200)
  observacoes      String           @db.VarChar(355)
  area_afetada     Int
  tipo_construcao  Int
  tipo_talude      Int
  vegetacao        Int
  situacao_vitimas Int
  interdicao       Int
  danos_materiais  Boolean
  data_geracao     DateTime         @db.Date
  data_atendimento DateTime         @db.Date
  Afetados         Afetados?
  Animal           Animal?
  DadosDaVistoria  DadosDaVistoria?
  Foto             Foto[]
  Memo             Memo?
  Ocorrencia       Ocorrencia       @relation(fields: [id_ocorrencia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Relatorio_ibfk_1")
  Casa             Casa?            @relation(fields: [id_casa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Relatorio_ibfk_2")

  @@index([id_casa], map: "id_casa")
  @@index([id_ocorrencia], map: "id_ocorrencia")
}

model Secretaria {
  id              Int          @id @default(autoincrement())
  nome_secretaria String       @db.VarChar(100)
  Memo            Memo[]
  Secretario      Secretario[]
}

model Secretario {
  id              Int        @id @default(autoincrement())
  id_secretaria   Int
  id_cargo        Int
  nome_secretario String     @db.VarChar(100)
  Secretaria      Secretaria @relation(fields: [id_secretaria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Secretario_ibfk_1")
  Cargo           Cargo      @relation(fields: [id_cargo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Secretario_ibfk_2")

  @@index([id_cargo], map: "id_cargo")
  @@index([id_secretaria], map: "id_secretaria")
}

model Tecnico {
  id             Int          @id @default(autoincrement())
  id_funcionario Int          @unique(map: "id_funcionario")
  Ocorrencia     Ocorrencia[]
  Funcionario    Funcionario  @relation(fields: [id_funcionario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Tecnico_ibfk_1")
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Afetados {
  id           Int       @id @default(autoincrement())
  id_relatorio Int       @unique(map: "id_relatorio")
  adultos      Int?
  criancas     Int?
  idosos       Int?
  especiais    Int?
  mortos       Int?
  feridos      Int?
  enfermos     Int?
  Relatorio    Relatorio @relation(fields: [id_relatorio], references: [id], onUpdate: Restrict, map: "Afetados_ibfk_1")
}

model AlertaChuva {
  id             Int          @id @default(autoincrement())
  id_pluviometro Int?
  status_chuva   String       @db.VarChar(50)
  data_chuva     DateTime     @db.DateTime(0)
  Pluviometro    Pluviometro? @relation(fields: [id_pluviometro], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "AlertaChuva_ibfk_1")

  @@index([id_pluviometro], map: "id_pluviometro")
}

model AlertaRio {
  id              Int          @id @default(autoincrement())
  id_fluviometro  Int?
  status_rio      String?      @db.VarChar(50)
  data_alerta_rio DateTime     @db.DateTime(0)
  Fluviometro     Fluviometro? @relation(fields: [id_fluviometro], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "AlertaRio_ibfk_1")

  @@index([id_fluviometro], map: "id_fluviometro")
}

model Animal {
  id           Int       @id @default(autoincrement())
  id_relatorio Int       @unique(map: "id_relatorio")
  caes         Int?
  gatos        Int?
  aves         Int?
  equinos      Int?
  Relatorio    Relatorio @relation(fields: [id_relatorio], references: [id], onUpdate: Restrict, map: "Animal_ibfk_1")
}

model Cargo {
  id         Int          @id @default(autoincrement())
  nome_cargo String       @db.VarChar(100)
  Secretario Secretario[]
}

model Casa {
  id             Int         @id @default(autoincrement())
  id_residencial Int
  interdicao     Int
  complemento    String?     @db.VarChar(50)
  Residencial    Residencial @relation(fields: [id_residencial], references: [id], onUpdate: Restrict, map: "Casa_ibfk_1")
  Relatorio      Relatorio[]

  @@index([id_residencial], map: "id_residencial")
}

model Civil {
  id             Int          @id @default(autoincrement())
  id_residencial Int?
  nome           String       @db.VarChar(100)
  email          String?      @db.VarChar(70)
  senha          String       @db.VarChar(70)
  cpf            String       @unique(map: "cpf") @db.Char(11)
  celular        String       @db.Char(11)
  telefone       String?      @db.Char(10)
  Residencial    Residencial? @relation(fields: [id_residencial], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "Civil_ibfk_1")
  Ocorrencia     Ocorrencia[]

  @@index([id_residencial], map: "id_residencial")
}

model Comunicado {
  id        Int    @id @default(autoincrement())
  id_gestor Int
  conteudo  String @db.VarChar(355)
  Gestor    Gestor @relation(fields: [id_gestor], references: [id], onUpdate: Restrict, map: "Comunicado_ibfk_1")

  @@index([id_gestor], map: "id_gestor")
}

model DadosDaVistoria {
  id                 Int       @id @default(autoincrement())
  id_relatorio       Int       @unique(map: "id_relatorio")
  desmoronamento     Boolean?
  deslizamento       Boolean?
  esgoto_escoamento  Boolean?
  erosao             Boolean?
  inundacao          Boolean?
  incendio           Boolean?
  arvores            Boolean?
  infiltracao_trinca Boolean?
  judicial           Boolean?
  monitoramento      Boolean?
  transito           Boolean?
  outros             String?   @db.VarChar(355)
  Relatorio          Relatorio @relation(fields: [id_relatorio], references: [id], onUpdate: Restrict, map: "DadosDaVistoria_ibfk_1")
}

model Endereco {
  cep         String        @id @db.Char(8)
  rua         String        @db.VarChar(155)
  bairro      String        @db.VarChar(100)
  cidade      String?       @db.VarChar(70)
  Fluviometro Fluviometro[]
  LocalAjuda  LocalAjuda[]
  Pluviometro Pluviometro[]
  Residencial Residencial[]
}

model Fluviometro {
  id         Int         @id @default(autoincrement())
  cep        String?     @db.Char(8)
  auth_key   String      @db.VarChar(64)
  auth_token String      @db.VarChar(64)
  latitude   Decimal?    @db.Decimal(8, 3)
  longitude  Decimal?    @db.Decimal(8, 3)
  AlertaRio  AlertaRio[]
  Endereco   Endereco?   @relation(fields: [cep], references: [cep], onDelete: Restrict, onUpdate: Restrict, map: "Fluviometro_ibfk_1")
  NivelRio   NivelRio[]

  @@index([cep], map: "cep")
}

model Foto {
  id           Int       @id @default(autoincrement())
  id_relatorio Int
  codificado   String    @db.LongText
  Relatorio    Relatorio @relation(fields: [id_relatorio], references: [id], onUpdate: Restrict, map: "Foto_ibfk_1")

  @@index([id_relatorio], map: "id_relatorio")
}

model Funcionario {
  id           Int          @id @default(autoincrement())
  nome         String       @db.VarChar(100)
  email        String       @unique(map: "email") @db.VarChar(100)
  senha        String       @db.VarChar(70)
  tipo_usuario Int
  Gestor       Gestor?
  Ocorrencia   Ocorrencia[]
  Registro     Registro[]
  Tecnico      Tecnico?
}

model Gestor {
  id                Int                 @id @default(autoincrement())
  id_funcionario    Int                 @unique(map: "id_funcionario")
  Comunicado        Comunicado[]
  Funcionario       Funcionario         @relation(fields: [id_funcionario], references: [id], onUpdate: Restrict, map: "Gestor_ibfk_1")
  ServiceWorkerData ServiceWorkerData[]
}

model LocalAjuda {
  id       Int      @id @default(autoincrement())
  cep      String   @db.Char(8)
  tipo     String?  @db.VarChar(100)
  conteudo String?  @db.VarChar(355)
  Endereco Endereco @relation(fields: [cep], references: [cep], onUpdate: Restrict, map: "LocalAjuda_ibfk_1")

  @@index([cep], map: "cep")
}

model Memo {
  id            Int        @id @default(autoincrement())
  id_relatorio  Int
  id_secretaria Int
  data_memo     DateTime   @db.DateTime(0)
  status_memo   String     @db.VarChar(355)
  setor         String     @db.VarChar(75)
  memorando     String     @db.VarChar(355)
  oficio        String     @db.VarChar(127)
  processo      String     @db.VarChar(355)
  Relatorio     Relatorio  @relation(fields: [id_relatorio], references: [id], onUpdate: Restrict, map: "Memo_ibfk_1")
  Secretaria    Secretaria @relation(fields: [id_secretaria], references: [id], onUpdate: Restrict, map: "Memo_ibfk_2")

  @@index([id_secretaria], map: "id_secretaria")
  @@index([id_relatorio], map: "id_relatorio")
}

model NivelChuva {
  id             Int          @id @default(autoincrement())
  id_pluviometro Int?
  chuva_em_mm    Decimal?     @db.Decimal(5, 2)
  data_chuva     DateTime?    @db.DateTime(0)
  Pluviometro    Pluviometro? @relation(fields: [id_pluviometro], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "NivelChuva_ibfk_1")

  @@index([id_pluviometro], map: "id_pluviometro")
}

model NivelRio {
  id             Int          @id @default(autoincrement())
  id_fluviometro Int?
  nivel_rio      Decimal?     @db.Decimal(5, 2)
  data_diario    DateTime?    @db.DateTime(0)
  Fluviometro    Fluviometro? @relation(fields: [id_fluviometro], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "NivelRio_ibfk_1")

  @@index([id_fluviometro], map: "id_fluviometro")
}

model Ocorrencia {
  id              Int          @id @default(autoincrement())
  id_tecnico      Int?
  id_atendente    Int?
  id_civil        Int
  id_residencial  Int
  acionamento     String       @db.VarChar(100)
  relato_civil    String       @db.VarChar(2047)
  num_casas       Int
  aprovado        Boolean
  encerrado       Boolean
  data_ocorrencia DateTime     @db.DateTime(0)
  Tecnico         Tecnico?     @relation(fields: [id_tecnico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "Ocorrencia_ibfk_1")
  Funcionario     Funcionario? @relation(fields: [id_atendente], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "Ocorrencia_ibfk_2")
  Civil           Civil        @relation(fields: [id_civil], references: [id], onUpdate: Restrict, map: "Ocorrencia_ibfk_3")
  Residencial     Residencial  @relation(fields: [id_residencial], references: [id], onUpdate: Restrict, map: "Ocorrencia_ibfk_4")
  Relatorio       Relatorio[]

  @@index([id_civil], map: "id_civil")
  @@index([id_tecnico], map: "id_tecnico")
  @@index([id_residencial], map: "id_residencial")
  @@index([id_atendente], map: "id_atendente")
}

model Pluviometro {
  id          Int           @id @default(autoincrement())
  cep         String        @db.Char(8)
  auth_key    String        @db.VarChar(64)
  auth_token  String        @db.VarChar(64)
  latitude    Decimal       @db.Decimal(8, 3)
  longitude   Decimal?      @db.Decimal(8, 3)
  AlertaChuva AlertaChuva[]
  NivelChuva  NivelChuva[]
  Endereco    Endereco      @relation(fields: [cep], references: [cep], onUpdate: Restrict, map: "Pluviometro_ibfk_1")

  @@index([cep], map: "cep")
}

model Registro {
  id             Int         @id @default(autoincrement())
  id_funcionario Int
  acao           Int
  descricao      String      @db.VarChar(355)
  momento        DateTime    @db.DateTime(0)
  Funcionario    Funcionario @relation(fields: [id_funcionario], references: [id], onUpdate: Restrict, map: "Registro_ibfk_1")

  @@index([id_funcionario], map: "id_funcionario")
}

model Relatorio {
  id                 Int              @id @default(autoincrement())
  id_ocorrencia      Int
  id_casa            Int
  gravidade          Int
  relatorio          String           @db.VarChar(2047)
  assunto            String           @db.VarChar(2047)
  observacoes        String           @db.VarChar(2047)
  area_afetada       Int
  tipo_construcao    Int
  tipo_talude        Int
  vegetacao          Int
  situacao_vitimas   Int
  interdicao         Int
  danos_materiais    Boolean
  data_geracao       DateTime         @db.DateTime(0)
  data_atendimento   DateTime         @db.DateTime(0)
  assinatura_tecnico String           @db.Text
  assinatura_civil   String           @db.Text
  Afetados           Afetados?
  Animal             Animal?
  DadosDaVistoria    DadosDaVistoria?
  Foto               Foto[]
  Memo               Memo[]
  Ocorrencia         Ocorrencia       @relation(fields: [id_ocorrencia], references: [id], onUpdate: Restrict, map: "Relatorio_ibfk_1")
  Casa               Casa             @relation(fields: [id_casa], references: [id], onUpdate: Restrict, map: "Relatorio_ibfk_2")

  @@index([id_ocorrencia], map: "id_ocorrencia")
  @@index([id_casa], map: "id_casa")
}

model Secretaria {
  id              Int          @id @default(autoincrement())
  nome_secretaria String       @db.VarChar(100)
  Memo            Memo[]
  Secretario      Secretario[]
}

model Secretario {
  id              Int        @id @default(autoincrement())
  id_secretaria   Int
  id_cargo        Int
  nome_secretario String     @db.VarChar(100)
  Secretaria      Secretaria @relation(fields: [id_secretaria], references: [id], onUpdate: Restrict, map: "Secretario_ibfk_1")
  Cargo           Cargo      @relation(fields: [id_cargo], references: [id], onUpdate: Restrict, map: "Secretario_ibfk_2")

  @@index([id_cargo], map: "id_cargo")
  @@index([id_secretaria], map: "id_secretaria")
}

model Tecnico {
  id             Int          @id @default(autoincrement())
  id_funcionario Int          @unique(map: "id_funcionario")
  ativo          Boolean
  token          String?      @db.VarChar(255)
  Ocorrencia     Ocorrencia[]
  Funcionario    Funcionario  @relation(fields: [id_funcionario], references: [id], onUpdate: Restrict, map: "Tecnico_ibfk_1")
}

model ServiceWorkerData {
  id          Int    @id @default(autoincrement())
  sw_endpoint String @db.VarChar(250)
  auth        String @db.VarChar(40)
  p256dh      String @db.VarChar(110)
  id_gestor   Int
  Gestor      Gestor @relation(fields: [id_gestor], references: [id], onUpdate: Restrict, map: "ServiceWorkerData_ibfk_1")

  @@index([id_gestor], map: "id_gestor")
}

model Residencial {
  id         Int          @id @default(autoincrement())
  cep        String       @db.Char(8)
  numero     String       @unique(map: "numero") @db.VarChar(10)
  Casa       Casa[]
  Civil      Civil[]
  Ocorrencia Ocorrencia[]
  Endereco   Endereco     @relation(fields: [cep], references: [cep], onUpdate: Restrict, map: "Residencial_ibfk_1")

  @@index([cep], map: "cep")
}
